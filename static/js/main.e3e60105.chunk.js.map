{"version":3,"sources":["components/Header.js","mascotas/environments/environments.js","mascotas/services/mascota.js","mascotas/MascotasForm.js","mascotas/MascotasTabla.js","mascotas/Mascotas.js","App.js","index.js"],"names":["Header","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","placeholder","URL_BACKEND","getMascotas","a","axios","get","resultado","data","postMascota","objMascota","post","JSON","stringify","headers","deleteMascotaById","fetch","method","peticion","json","putMascota","put","mascota_id","respuesta","formularioVacio","mascota_nombre","mascota_raza","mascota_tipo","mascota_edad","mascota_colores","mascota_activo","MascotasForm","traerMascotas","mascotaEditar","useState","formulario","setFormulario","modo","setModo","handleChange","e","valor","target","checked","value","name","useEffect","console","log","onSubmit","preventDefault","Swal","fire","title","text","icon","showCancelButton","then","isConfirmed","timer","status","position","showConfirmButton","htmlFor","onChange","MascotasTabla","mascotas","setMascotaEditar","columns","label","field","rows","map","m","defaultChecked","estado","rpta","acciones","onClick","responsive","striped","bordered","hover","Mascotas","setMascotas","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3e60105.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"!#\">MASCOTAS</a>\r\n      <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"!#\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"!#\">Link</a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"!#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n              <a className=\"dropdown-item\" href=\"!#\">Action 1</a>\r\n              <a className=\"dropdown-item\" href=\"!#\">Action 2</a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export const URL_BACKEND = \"https://5f86384dc8a16a0016e6ac8f.mockapi.io\";","import axios from \"axios\";\r\nimport { URL_BACKEND } from \"../environments/environments\";\r\n\r\nexport const getMascotas = async () => {\r\n  const resultado = await axios.get(`${URL_BACKEND}/mascota`);\r\n  return resultado.data;\r\n}\r\n\r\nexport const postMascota = async (objMascota) => {\r\n\r\n  // const peticion = await fetch(`${URL_BACKEND}/mascota`, {\r\n  //   method: \"POST\",\r\n  //   body: JSON.stringify(objMascota),\r\n  //   headers: {\r\n  //     \"Content-type\": \"application/json\"\r\n  //   }\r\n  // });\r\n  // const data = await peticion.json();\r\n  // El código de arriba, es la misma petición sin usar AXIOS\r\n\r\n  const resultado = await axios.post(`${URL_BACKEND}/mascota`,\r\n    JSON.stringify(objMascota), {\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  });\r\n  return resultado.data;\r\n}\r\n\r\nexport const deleteMascotaById = async (id) => {\r\n  // const respuesta = await axios.delete(`${URL_BACKEND}/mascota/${id}`);\r\n  // return respuesta.data;\r\n\r\n  const peticion = await fetch(`${URL_BACKEND}/mascota/${id}`, { method: \"DELETE\" });\r\n  const json = await peticion.json();\r\n  return json\r\n\r\n}\r\n\r\nexport const putMascota = async (objMascota) => {\r\n\r\n  const respuesta = await axios.put(`${URL_BACKEND}/mascota/${objMascota.mascota_id}`,\r\n    JSON.stringify(objMascota),\r\n    {\r\n      headers: { \"Content-type\": \"Application/json\" }\r\n    });\r\n  return respuesta;\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Swal from \"sweetalert2\";\r\nimport { postMascota, putMascota } from './services/mascota';\r\n\r\nconst formularioVacio = {\r\n  mascota_nombre: \"\",\r\n  mascota_raza: 0,\r\n  mascota_tipo: 0,\r\n  mascota_edad: 0,\r\n  mascota_colores: \"\",\r\n  mascota_activo: false\r\n}\r\n\r\nconst MascotasForm = ({ traerMascotas, mascotaEditar }) => {\r\n\r\n  const [formulario, setFormulario] = useState(formularioVacio);\r\n  const [modo, setModo] = useState(\"crear\");\r\n\r\n  const handleChange = (e) => {\r\n    let valor = e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\r\n    setFormulario({\r\n      ...formulario,\r\n      [e.target.name]: valor\r\n    });\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (modo === \"crear\") {\r\n      Swal.fire({\r\n        title: \"¿Registrar mascota?\",\r\n        text: \"Se guardará en la base de datos\",\r\n        icon: \"question\",\r\n        showCancelButton: true\r\n      }).then(({ isConfirmed }) => {\r\n        if (isConfirmed) {\r\n          // crear el registro de la mascota\r\n          postMascota(formulario).then(data => {\r\n            if (data.mascota_id) {\r\n              traerMascotas();\r\n              setFormulario(formularioVacio);\r\n              Swal.fire({\r\n                title: \"Registrado!\",\r\n                text: \"Mascota registrada correctamente\",\r\n                icon: \"success\",\r\n                timer: 1500\r\n              });\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      // asumimos que estamos en el modo editar\r\n      Swal.fire({\r\n        title: \"¿Editar?\",\r\n        text: \"¿Seguro que desea editar el registro de la mascota?\",\r\n        icon: \"question\",\r\n        showCancelButton: true\r\n      }).then(({ isConfirmed }) => {\r\n        if (isConfirmed) {\r\n          putMascota({ ...formulario }).then((respuesta) => {\r\n            if (respuesta.status === 200) {\r\n\r\n              setFormulario(formularioVacio);\r\n              setModo(\"crear\");\r\n              traerMascotas();\r\n\r\n              Swal.fire({\r\n                position: \"top-end\",\r\n                timer: 1000,\r\n                title: \"Registro actualizado!\",\r\n                icon: \"success\",\r\n                showConfirmButton: false,\r\n              });\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"use effect vacío\");\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Use effect cuando cambia el formulario\");\r\n  // }, [formulario])\r\n\r\n  useEffect(() => {\r\n    console.log(\"Use effect cuando cambia la mascotaEditar\");\r\n    if (mascotaEditar !== null) {\r\n      setFormulario(mascotaEditar);\r\n      setModo(\"editar\");\r\n    }\r\n  }, [mascotaEditar]);\r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body\">\r\n            <form className=\"row\" onSubmit={handleSubmit}>\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"\">Nombre:</label>\r\n                <input type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Ingrese nombre\"\r\n                  name=\"mascota_nombre\"\r\n                  onChange={handleChange}\r\n                  value={formulario.mascota_nombre}\r\n                />\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"\">Raza:</label>\r\n                <select className=\"form-control\"\r\n                  name=\"mascota_raza\"\r\n                  value={formulario.mascota_raza}\r\n                  onChange={handleChange}>\r\n                  <option value=\"0\">Seleccione</option>\r\n                  <option value=\"1\">Bull Terrier</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"\">Colores:</label>\r\n                <input type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"mascota_colores\"\r\n                  onChange={handleChange}\r\n                  value={formulario.mascota_colores}\r\n                  placeholder=\"Ingrese colores\" />\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"\">Edad</label>\r\n                <input type=\"number\"\r\n                  name=\"mascota_edad\"\r\n                  value={formulario.mascota_edad}\r\n                  onChange={handleChange}\r\n                  className=\"form-control\" />\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"\">Tipo</label>\r\n                <select className=\"form-control\"\r\n                  value={formulario.mascota_tipo}\r\n                  name=\"mascota_tipo\"\r\n                  onChange={handleChange}>\r\n                  <option value=\"0\">Seleccione</option>\r\n                  <option value=\"1\">Perro</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <label htmlFor=\"\">¿Registro activo?</label>\r\n                <div className=\"input-group mb-3\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <div className=\"input-group-text\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        // checked, es el campo análogo a value\r\n                        // y sólo acepta valores booleanos (true/false)\r\n                        checked={formulario.mascota_activo}\r\n                        name=\"mascota_activo\"\r\n                        onChange={handleChange}\r\n                        aria-label=\"Checkbox for following text input\"\r\n                        id=\"checkActivo\" />\r\n                    </div>\r\n                  </div>\r\n                  <label htmlFor=\"checkActivo\" className=\"form-control\" >Activo</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <button className=\"btn btn-block btn-primary\"\r\n                  type=\"submit\">\r\n                  {modo === \"crear\" ? \"Crear Mascota\" : \"Guardar Cambios\"}\r\n\r\n                </button>\r\n              </div>\r\n              <div className=\"form-group col-md-6\">\r\n                <button className=\"btn btn-block btn-danger\"\r\n                  type=\"button\">Cancelar</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MascotasForm\r\n","import React, { useEffect } from 'react'\r\nimport { MDBDataTable } from \"mdbreact\";\r\nimport { deleteMascotaById, putMascota } from './services/mascota';\r\nimport Swal from 'sweetalert2';\r\nimport Toggle from \"react-toggle\";\r\nimport \"react-toggle/style.css\";\r\nimport { useState } from 'react';\r\n\r\nconst MascotasTabla = ({ mascotas, traerMascotas, setMascotaEditar }) => {\r\n\r\n\r\n\r\n  const eliminarMascotaPorId = (id) => {\r\n    Swal.fire({\r\n      title: \"¿Eliminar?\",\r\n      icon: \"error\",\r\n      text: \"Los cambios serán irreversibles\",\r\n      showCancelButton: true\r\n    }).then(({ isConfirmed }) => {\r\n      if (isConfirmed) {\r\n        deleteMascotaById(id).then((data) => {\r\n          // si la data tiene un atributo mascota_id, sí se ha eliminado\r\n          if (data.mascota_id) {\r\n            traerMascotas();\r\n            Swal.fire({\r\n              title: \"Eliminado!\",\r\n              text: \"Registro eliminado satisfactoriamente\",\r\n              timer: 1500,\r\n              icon: \"success\"\r\n            });\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n  const handleChangeToggle = (estado, objMascota) => {\r\n    putMascota({\r\n      ...objMascota,\r\n      mascota_activo: estado\r\n    }).then(rpta => {\r\n      if (rpta.status === 200) {\r\n        Swal.fire({\r\n          position: \"top-end\",\r\n          icon: \"success\",\r\n          title: \"Registro actualizado\",\r\n          showConfirmButton: false,\r\n          timer: 1000\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  let data = {\r\n    columns: [\r\n      {\r\n        // Texto del th\r\n        label: \"Id\",\r\n        // nombre del campo del objeto que debe coincidir\r\n        // en las rows\r\n        field: \"mascota_id\"\r\n      },\r\n      { label: \"Nombre\", field: \"mascota_nombre\" },\r\n      { label: \"Raza\", field: \"mascota_raza\" },\r\n      { label: \"Colores\", field: \"mascota_colores\" },\r\n      { label: \"Tipo\", field: \"mascota_tipo\" },\r\n      { label: \"Edad\", field: \"mascota_edad\" },\r\n      { label: \"Activo\", field: \"mascota_activo\" },\r\n      { label: \"Acciones\", field: \"acciones\" }\r\n    ],\r\n    rows: mascotas.map(m => {\r\n      return {\r\n        ...m,\r\n        mascota_activo: <Toggle defaultChecked={m.mascota_activo}\r\n          onChange={(e) => {\r\n            handleChangeToggle(e.target.checked, { ...m });\r\n          }} />,\r\n        acciones: (<>\r\n          <button className=\"btn btn-secondary mr-2\" onClick={() => {\r\n            setMascotaEditar({ ...m });\r\n          }}>Editar</button>\r\n          <button className=\"btn btn-danger\" onClick={() => {\r\n            eliminarMascotaPorId(m.mascota_id);\r\n          }}>Eliminar</button>\r\n        </>)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"row mt-4\">\r\n      <div className=\"col-12\">\r\n        <div className=\"card shadow\">\r\n          <div className=\"card-body\">\r\n            <MDBDataTable\r\n              className=\"text-center\"\r\n              responsive\r\n              striped\r\n              bordered\r\n              hover\r\n              data={data} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MascotasTabla\r\n","import React, { useEffect, useState } from 'react'\r\nimport MascotasForm from \"./MascotasForm\";\r\nimport MascotasTabla from './MascotasTabla';\r\nimport { getMascotas } from './services/mascota';\r\nconst Mascotas = () => {\r\n\r\n  const [mascotas, setMascotas] = useState([]);\r\n  const [mascotaEditar, setMascotaEditar] = useState(null);\r\n\r\n  const traerMascotas = async () => {\r\n    const data = await getMascotas();\r\n    setMascotas(data);\r\n  }\r\n  useEffect(() => {\r\n    traerMascotas();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <MascotasForm traerMascotas={traerMascotas}\r\n                    mascotaEditar={mascotaEditar} />\r\n      <MascotasTabla mascotas={mascotas}\r\n                      traerMascotas={traerMascotas}\r\n                      setMascotaEditar={setMascotaEditar} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mascotas\r\n","import React from 'react'\r\nimport Header from './components/Header'\r\nimport Mascotas from './mascotas/Mascotas'\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className=\"container mt-4\">\r\n\r\n        <Mascotas />\r\n\r\n      </main>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}